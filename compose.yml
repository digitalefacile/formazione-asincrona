version: '3.9'

services:
  cron:
    build:
      context: .
      args:
        BASE_IMAGE: "${BASE_IMAGE:-bitnami/moodle}:${BASE_IMAGE_TAG:-latest}"
    image: "${APP_IMAGE:-bitnami/moodle}:${APP_IMAGE_TAG:-latest}"
    user: "root"
    depends_on:
      db:
        condition: service_started
      change-vol-ownership:
        condition: service_completed_successfully
    volumes:
      - './src/www:/bitnami/moodle'              # Source
      - './mnt/moodledata:/bitnami/moodledata'      # Persistance Data
      # - './etc/config.php:/bitnami/moodle/config.php' # Moodle config.php
    environment:
      BITNAMI_DEBUG: "true"
      CRON: "true"
      MOODLE_DATABASE_HOST: db
      MOODLE_DATABASE_TYPE: mysqli
      MOODLE_DATABASE_PORT_NUMBER: 3306
      MOODLE_DATABASE_NAME: moodle_db
      MOODLE_DATABASE_USER: moodle_db_user
      MOODLE_DATABASE_PASSWORD_FILE: '/run/secrets/db_password'
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      ALLOW_EMPTY_PASSWORD: "no"
      APACHE_HTTP_PORT_NUMBER: 8080
      APACHE_HTTPS_PORT_NUMBER: 8443
      # MOODLE_REVERSEPROXY: 'yes'
      # MOODLE_SSLPROXY: 'yes'
      # MOODLE_HOST: '127.0.0.1:8080'
      MOODLE_SKIP_BOOTSTRAP: "yes"
      MOODLE_USERNAME: user
      MOODLE_PASSWORD_FILE: '/run/secrets/app_password'
      MOODLE_SITE_NAME: Moodle Local Dev
      MOODLE_EMAIL: user@example.com
      PHP_UPLOAD_MAX_FILESIZE: 400M
      PHP_POST_MAX_SIZE: 400M
    # env_file:
    #   - ./secrets/s3_filestore_bucket.env
    # configs:
    #   - source: moodle_conf
    #     target: '/bitnami/moodle/config.php'
    secrets:
      - db_password
      - app_password
  
  app:
    extends:
      service: cron
    user: "1001"
    ports:
    #    host:container
      - "8080:8080"
    #   - "8443:8443"
    environment:
      CRON: "false"
    #   BITNAMI_DEBUG: "true"

  install:
    profiles: [ "install" ]
    extends:
      service: cron
    # user: "1001"
    # ports: !reset []
    environment:
      MOODLE_SKIP_BOOTSTRAP: "no"
      CRON: !reset null
    command: "/opt/bitnami/scripts/moodle/setup.sh"
  
  # alb:
  #   image: nginx:alpine
  #   ports:
  #   #    host:container
  #     - "8080:80"
  #     # - "8443:443"
  #   configs:
  #     - source: alb_conf
  #       target: '/etc/nginx/conf.d/default.conf'

  db:
    image: mysql
    environment:
      MYSQL_DATABASE: moodle_db
      MYSQL_USER: moodle_db_user
      MYSQL_PASSWORD_FILE: '/run/secrets/db_password'
      MYSQL_ROOT_PASSWORD_FILE: '/run/secrets/db_root_password'
    volumes:
      - './mnt/db_data:/var/lib/mysql'
      # - './mnt/db_dump.sql:/docker-entrypoint-initdb.d/db_dump.sql' # Uncomment to Load a db_dump.sql on first startup
    secrets:
      - db_password
      - db_root_password

  # Workaround: fix volumes permissions
  change-vol-ownership:
    image: alpine
    # user: root
    command:
      - 'sh'
      - '-c'
      # - | # NOTE: With cron svc started together with Apache we need to have 1001 and "daemon" user/group in place.
      #   echo $$(date) Fixing data permissions...
      #   find /mnt/moodle /mnt/moodledata -not \( -user 1001 -and -group 1 \) -exec chown 1001:1 {} \+
      #   find /mnt/moodle /mnt/moodledata -not -perm -g=w -exec chmod g+w {} \+
      #   echo "$$(date) Done!"
      - | # NOTE: With cron svc started without Web Server we can keep root as group
        echo $$(date) Fixing data permissions...
        find /mnt/moodle /mnt/moodledata -not \( -user 1001 -and -group root \) -exec chown 1:root {} \+
        echo "$$(date) Done!"
    volumes:
      - './src/www:/mnt/moodle'              # Source
      - './mnt/moodledata:/mnt/moodledata'   # Persistance Data

# configs:
#   alb_conf:
#     file: './etc/nginx.alb.conf'
#   moodle_conf:
#     file: './etc/config.php'

secrets:
  app_password:
    file: './secrets/app_password.sec'
  db_password:
    file: './secrets/db_password.sec'
  db_root_password:
    file: './secrets/db_root_password.sec'

# volumes:
  # src:
  #   driver_opts:
  #     type: none
  #     device: "./src"
  #     o: bind

